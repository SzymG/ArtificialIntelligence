package com.sample;

import javax.swing.*;
import javax.swing.border.LineBorder;

import java.awt.*;

import org.kie.api.KieServices;
import org.kie.api.runtime.KieContainer;
import org.kie.api.runtime.KieSession;

/**
 * This is a sample class to launch a rule.
 */
public class DroolsTest {

    public static final void main(String[] args) {
        try {
            // load up the knowledge base
        	
        	 // KieServices is the factory for all KIE services
	        KieServices ks = KieServices.Factory.get();
	        
	        // From the kie services, a container is created from the classpath
    	    KieContainer kContainer = ks.getKieClasspathContainer();
            // go !
        	
        	new Message().init(kContainer, true);
        	
        } catch (Throwable t) {
            t.printStackTrace();
        }
    }

    public static class Message {

		public void init(KieContainer kc, boolean exitOnClose) {
			
			//The callback is responsible for populating working memory and
	        // fireing all rules
	        RomanticUI ui = new RomanticUI( new CheckoutCallback( kc ) );
	        ui.createAndShowGUI(exitOnClose);
		}

		public static class RomanticUI extends JPanel {
			
			private static final long serialVersionUID = 510l;

	        private CheckoutCallback callback;    //Co bêdzie siê dzia³o po wciœnieciu przycisku

			public RomanticUI(CheckoutCallback callback) {
				
				this.callback = callback;
				
				this.setPreferredSize(new Dimension(800,600));
				
				String[] petStrings = { "My main squeeze", "My family"};

				JComboBox petList = new JComboBox(petStrings);
				petList.setBounds(200,350,400,100);
				
				
				this.add(petList);
				
				JButton b1 = new JButton("Start!");
				b1.setBounds(300,500,200,80);
				
				this.add(b1);
				
				JLabel l1 = new JLabel("obrazek");
				l1.setBorder(LineBorder.createGrayLineBorder());
				l1.setBounds(10,10,780,200);
				
				this.add(l1);
	            
			}

			public void createAndShowGUI(boolean exitOnClose) {
				//Create and set up the window.
	            JFrame frame = new JFrame( "Romantic Movie" );
	            frame.setDefaultCloseOperation(exitOnClose ? JFrame.EXIT_ON_CLOSE : JFrame.DISPOSE_ON_CLOSE);

	            setOpaque( true );
	            frame.setContentPane( this );
	            frame.setLayout(null);

	            //Display the window.
	            frame.pack();
	            frame.setLocationRelativeTo(null); // Center in screen
	            
	            frame.setVisible( true );
				
			}
			
		}
		
		public static class CheckoutCallback {
	        KieContainer kcontainer;
	        JTextArea     output;

	        public CheckoutCallback(KieContainer kcontainer) {
	            this.kcontainer = kcontainer;
	        }
		}

    }

}
